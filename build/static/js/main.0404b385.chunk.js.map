{"version":3,"sources":["App.js","components/Header.js","components/BaseLayout.js","components/utils/authentication.js","components/Register.js","components/Login.js","components/utils/handleCountdown.js","components/utils/replaceASCII.js","components/userMovieList.js","components/exampleMovieList.js","components/WatchList.js","components/utils/findExpired.js","components/FindAndAdd.js","components/UserWatchList.js","components/NewMovies.js","serviceWorker.js","components/stores/reducers/reducer.js","index.js"],"names":["App","react_default","a","createElement","className","Header","handleLogoutClick","localStorage","removeItem","_this","props","onLogout","history","push","react_router_dom","to","this","isAuthenticated","onClick","Component","BaseLayout","components_Header","children","connect","state","dispatch","type","withRouter","setAuthenticationHeader","token","axios","defaults","headers","common","concat","Register","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTextBoxChange","e","setState","defineProperty","target","name","value","handleSubmitRegistration","post","username","password","firstName","lastName","email","then","response","data","setItem","onAuthenticated","message","onChange","placeholder","Login","handleSubmitLogin","fetch","method","Content-Type","body","JSON","stringify","json","status","userid","id","alert","catch","error","console","log","handleInputChange","components_Register","uname","getDays","exp","today","Date","goneDate","Math","ceil","getTime","replaceASCII","replace","MovieList","_Component","objectSpread","movies","loading","inherits","createClass","key","_this2","movieItem","parse","getItem","ITEMS","map","movie","str","title","imdbid","src","image","alt","unogsdate","handleCountdown","ExampleMovieList","Content-type","WatchList","removeMovie","onUpdate","watchList","expiredList","_this3","userList","movieItems","movieData","wLMovie","i","length","date","FindAndAdd","handleFindMovie","OMDB_KEY","process","REACT_APP_OMDB_KEY","Response","returnedMovies","Search","handleAddToWatchList","imdbID","omdbList","Poster","Title","UserWatchList","apply","arguments","components_WatchList","components_FindAndAdd","NewMovies","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","addEventListener","event","request","url","respondWith","caches","initialState","reducer","undefined","action","store","createStore","ReactDOM","render","es","components_BaseLayout","react_router","path","exact","component","document","getElementById","URL","href","origin","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0404b385.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"homePage\">\n      <span className=\"homePageAlignment\"><p className=\"homePageTitle\">Welcome to Last Call</p></span>\n      <p className=\"homePageAlignment\">Netflix is a movie streaming service, which acquires and loses the rights to movies and TV shows on a regular basis. As content is added and removed, Netflix releases a quartly statement which predicts when content will be leaving the site. Here you are able to see a list of what is on said list and when it will be officially removed from the Netflix website.</p>\n      <p>Due to Netflix's policies regarding the use of their data, we are unable to connect our application to their databse. This means you will have to enter your watch list manually!</p>\n      <p>We also cannot check your watch list with what Netflix currently has the rights to, meaning it is up to you to keep your watch list updated!</p> \n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './styling/Header.css';\nimport './styling/navbar.css';\n\n\nclass Header extends Component {\n  handleLogoutClick = () => {\n    localStorage.removeItem('jsonwebtoken')\n    this.props.onLogout()\n    this.props.history.push('/login-page')\n  }\n  render() {\n    return (\n      <div className=\"headerMenu\">\n        <NavLink to='/'>\n          <p className=\"websiteTitle\">Last Call</p>\n        </NavLink>\n        <div className=\"dropdown\">\n          <button className=\"dropbtn\">\n            <p className=\"websiteTitle\">Menu</p><i className=\"fa fa-caret-down\"></i></button>\n          <div className=\"dropdown-content\">\n            {this.props.isAuthenticated ? <NavLink to='/userMovies'>Whats Leaving</NavLink> : <NavLink to='/exampleMovies'>Whats Leaving</NavLink>}\n            {this.props.isAuthenticated ? <NavLink to='/newArrivals'>New Arrivals</NavLink> : <NavLink to='/newArrivals'>New Arrivals</NavLink>}\n            {this.props.isAuthenticated ? <NavLink to=\"/user-watchList\">My Watch List</NavLink> : null}\n            {this.props.isAuthenticated ? <NavLink to=\"#\" onClick={this.handleLogoutClick}>Logout</NavLink> : <NavLink to='/login-page'>Login</NavLink>}\n\n          </div>\n        </div>\n\n      </div>\n    )\n  };\n}\n\nexport default Header;\n","import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom';\n\nimport Header from './Header.js';\nimport './styling/BaseLayout.css';\n\nclass BaseLayout extends Component {\n  render(){\n  return (\n    <div className=\"baseLayoutBody\">\n      <Header className=\"headerOrientation\" onLogout={this.props.onLogout} isAuthenticated={this.props.isAuthenticated}\n      history={this.props.history}/>\n      {this.props.children}\n    </div>\n  )};\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    onLogout:()=>dispatch({type:\"LOGOUT\"})\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return{\n    isAuthenticated: state.isAuthenticated\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(BaseLayout))\n","import axios from 'axios'\n\nexport function setAuthenticationHeader(token) {\n\n  // set the token in the header\n  if(token) {\n    // set the headers\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n  } else {\n    // remove the token\n    delete axios.defaults.headers.common['Authorization']\n  }\n\n}\n","import React,{Component} from 'react';\nimport axios from 'axios';\nimport {setAuthenticationHeader} from './utils/authentication'\nimport './styling/login.css'\n\nclass Register extends Component {\n  constructor(){\n    super()\n    this.state={\n      username:'',\n      password:'',\n      firstName:'',\n      lastName:'',\n      email:'',\n      message:''\n    }\n  }\n\n  handleTextBoxChange=(e)=>{\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n\n  handleSubmitRegistration=()=>(\n    axios.post('https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/register',{\n      username: this.state.username,\n      password: this.state.password,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      email: this.state.email\n    })\n    .then(response=>{\n      let token = response.data.token\n      localStorage.setItem('jsonwebtoken',token)\n      this.props.onAuthenticated(token)\n      setAuthenticationHeader(token)\n    })\n    // .catch(error=>alert(\"Username, password, or email is incorrect! Username must be 6-20 characters. Password must be 6-20 characters with one uppercase and lowercase letter and at least one number. Must use a valid email.\"))\n  )\n\n  render(){\n    return(\n      <div>\n      <h1>Register</h1>\n      <input name=\"username\" onChange={this.handleTextBoxChange} placeholder=\"New Username\"/>\n      <input name=\"password\" onChange={this.handleTextBoxChange} type=\"password\" placeholder=\"New Password\"/>\n      <input name=\"firstName\" onChange={this.handleTextBoxChange} placeholder=\"First Name\"/>\n      <input name=\"lastName\" onChange={this.handleTextBoxChange} placeholder=\"Last Name\"/>\n      <input name=\"email\" type='email' onChange={this.handleTextBoxChange} placeholder=\"Email\"/>\n      <button onClick={this.handleSubmitRegistration}>Register</button>\n      </div>\n    )\n  }\n}\nexport default Register\n","import React, { Component } from 'react';\nimport Register from './Register.js';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { setAuthenticationHeader } from './utils/authentication.js'\nimport './styling/login.css'\n\nclass Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      username: '',\n      password: ''\n    }\n  }\n\n  handleSubmitLogin = () => (\n    fetch('https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n      username: this.state.username,\n      password: this.state.password,\n    })\n  })\n      .then(response =>\n        response.json()).then(json=>{\n          if (json.status === 200) {\n          // console.log(json)\n          let token = json.token\n          let username = json.username\n          let userid = json.id\n          localStorage.setItem('userid', userid)\n          localStorage.setItem('jsonwebtoken', token)\n          this.props.onAuthenticated(username, token)\n          this.props.history.push('/')\n\n          setAuthenticationHeader(token)\n        } else if (json.status === 500) {\n          alert(json.message)\n        }\n      }).catch((error)=>{\n        console.log(error)\n      })\n  )\n\n  handleInputChange = (e) => (\n\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  )\n\n\n\n  render() {\n    return (\n      <div className=\"loginBody\">\n        <h1>Login</h1>\n        <input onChange={this.handleInputChange} name=\"username\" placeholder=\"username\"></input>\n        <input onChange={this.handleInputChange} name=\"password\" type=\"password\" placeholder=\"password\"></input>\n        <button onClick={this.handleSubmitLogin}>Login</button>\n        <Register />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    uname: state.username\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAuthenticated: (username, token) => dispatch({ type: 'ON_AUTH', username: username, token: token })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","\n\nexport default function getDays(exp) {\n    if (exp === \"-\") {\n        return \"Available\"\n    }\n    let today = new Date()\n    let one_day = 1000 * 60 * 60 * 24\n    let goneDate = new Date(exp)\n    return Math.ceil((goneDate - today.getTime()) / one_day)\n}\n","export default function replaceASCII(value) {\n\n  return value.replace(\"&amp;\",\"&\").replace(\"&gt;\",\">\").replace(\"&lt;\",\"<\").replace(\"&quot;\",'\"').replace(\"&#39;\", \"'\").replace(\"&rsquo;\",\"'\")\n\n}\n","import React, { Component } from 'react';\nimport handleCountdown from './utils/handleCountdown'\nimport './styling/movieList.css'\nimport replaceASCII from './utils/replaceASCII'\nimport movieData from '../movieData.json'\n\n\nexport class MovieList extends Component {\n    constructor(props) {\n\n        let url = \"https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/expiring\"\n        fetch(url)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({\n                    ...this.state.movies,\n                    movies: json\n                })\n                localStorage.setItem('movieData', JSON.stringify(json))\n            })\n        super(props)\n        this.state = {\n            movies: '',\n            loading: true\n        }\n    }\n    componentDidMount() {\n        let url = \"https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/expiring\"\n        fetch(url)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({\n                    ...this.state.movies,\n                    loading: false,\n                    movies: json\n                })\n\n                localStorage.setItem('movieData', JSON.stringify(json))\n            })\n    }\n    render() {\n        let movies = []\n        let movieItem = (<p>Loading</p>)\n        if (!this.state.loading) {\n            movies = JSON.parse(localStorage.getItem('movieData')).ITEMS\n            movieItem = movies.map((movie) => {\n                let str = replaceASCII(movie.title)\n                return (\n                    <div className=\"listElementContainer\">\n                        <li className=\"listElement\" key={movie.imdbid}>\n                            <div>\n                                <img src={movie.image} alt={movie.image}></img>\n                                <p className=\"listElementMovieTitle\">{str}</p>\n                                <p className=\"listElementMovieEndDate\">{movie.unogsdate}</p>\n                                <span className=\"listElementMovieCountdown\">{(handleCountdown(movie.unogsdate) <= 0) ? <p className=\"noLongerAvailable\">No Longer Available</p> : (handleCountdown(movie.unogsdate) === 1) ? <p className=\"lastDayToWatch\">Last Day to Watch</p> : `${handleCountdown(movie.unogsdate)} days remaining`}</span>\n                            </div>\n                        </li>\n                    </div>\n\n                )\n\n            })\n        }\n        return (\n            <div className=\"listElementBody\">\n                <div className=\"listElementHeader\">\n                    <h1>This is What's Leaving</h1>\n                </div>\n                <ul className=\"movieItemList\">{movieItem}</ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport handleCountdown from './utils/handleCountdown'\nimport './styling/movieList.css'\nimport replaceASCII from './utils/replaceASCII'\nimport movieData from '../movieData.json'\n\nexport class ExampleMovieList extends Component {\n\n    constructor(props) {\n        let url = \"https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/expiring\"\n        fetch(url, {\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n            .then(response => response.json())\n            .then(json => {\n                this.setState({\n                    ...this.state.movies,\n                    movies: json\n                })\n                localStorage.setItem('movieData', JSON.stringify(json))\n            })\n\n        super(props)\n        this.state = {\n            movies: '',\n            loading: true\n        }\n    }\n    componentDidMount() {\n        let url = \"https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/expiring\"\n        fetch(url, {\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n            .then(response => response.json())\n            .then(json => {\n                this.setState({\n                    ...this.state.movies,\n                    loading: false,\n                    movies: json\n                })\n                localStorage.setItem('movieData', JSON.stringify(json))\n            })\n    }\n    render() {\n        let movies = []\n        let movieItem = (<p>Loading</p>)\n        if (!this.state.loading) {\n            movies = JSON.parse(localStorage.getItem('movieData')).ITEMS\n            movieItem = movies.map((movie) => {\n                let str = replaceASCII(movie.title)\n                return (\n                    <div className=\"listElementContainer\">\n                        <li className=\"listElement\" key={movie.imdbid}>\n                            <div>\n                                <img src={movie.image} alt={movie.image}></img>\n                                <p className=\"listElementMovieTitle\">{str}</p>\n                                <p className=\"listElementMovieEndDate\">{movie.unogsdate}</p>\n                                <span className=\"listElementMovieCountdown\">{(handleCountdown(movie.unogsdate) <= 0) ? <p className=\"noLongerAvailable\">No Longer Available</p> : (handleCountdown(movie.unogsdate) === 1) ? <p className=\"lastDayToWatch\">Last Day to Watch</p> : `${handleCountdown(movie.unogsdate)} days remaining`}</span>\n                            </div>\n                        </li>\n                    </div>\n\n\n                )\n\n            })\n        }\n        return (\n            <div className=\"listElementBody\">\n                <div className=\"listElementHeader\">\n                    <h1>This is What's Leaving</h1>\n                </div>\n                <ul className=\"movieItemList\">{movieItem}</ul>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport movieData from '../movieData.json'\nimport handleCountdown from './utils/handleCountdown'\nimport './styling/UserWatchList.css'\nimport { connect } from 'react-redux'\nimport findExpired from '../components/utils/findExpired'\n\n\n\nclass WatchList extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            watchList: [],\n            userid: localStorage.getItem('userid')\n        }\n    }\n    componentDidMount() {\n        let url = \"https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/user-watch-list\"\n        fetch(url, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                userid: this.state.userid\n            })\n        }).then(response => response.json())\n            .then(json => {\n                this.props.onUpdate(json)\n            })\n    }\n\n    removeMovie = (e) => {\n        fetch('https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/delete-movie', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                imdbid: e.target.id,\n                userid: this.state.userid\n            })\n        }).then((response) => response.json())\n            .then(json => {\n                // let datified = findExpired(json, movieData)\n                this.props.onUpdate(json)\n            })\n    }\n    render() {\n        let userList = this.props.watchList\n        let datified = findExpired(userList, movieData)\n        let movieItems = datified.map((movie) => {\n            return (\n                <li key={movie.imdbid}>\n                    <p className=\"listElementMovieTitle\">{movie.title}</p>\n                    <span className=\"listElementMovieCountdown\">{(handleCountdown(movie.date) <= 0) ? <p className=\"noLongerAvailable\">No Longer Available</p> : (handleCountdown(movie.date) === 1) ? <p className=\"lastDayToWatch\">Last Day to Watch</p> : (handleCountdown(movie.date) === 'Available') ? <p>Available</p> : <p>{handleCountdown(movie.date)} days remaining</p>}\n                    </span>\n                    <button onClick={this.removeMovie} id={movie.imdbid}>Remove</button>\n                </li >\n            )\n        })\n\n        return (\n            <div className=\"userWatchListDiv\">\n                {(this.props.username === '') ? <h2>User WatchList</h2> : <h2>{this.props.username}'s WatchList</h2>}\n                <ul>{movieItems}</ul>\n            </div >\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        watchList: state.watchList,\n        username: state.username\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onUpdate: (json) => dispatch({\n            type: 'UPDATE',\n            value: json\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WatchList)\n","export default function findExpired(watchList, expiredList) {\n    let result = watchList.map((wLMovie) => {\n        for (let i = 0; i < expiredList.ITEMS.length; i++) {\n\n            if (wLMovie.imdbid === expiredList.ITEMS[i].imdbid) {\n                console.log(wLMovie.imdbid, expiredList.ITEMS[i].imdbid)\n\n                return {\n                    title: wLMovie.title,\n                    imdbid: wLMovie.imdbid,\n                    date: expiredList.ITEMS[i].unogsdate\n                }\n            }\n        }\n        return {\n            title: wLMovie.title,\n            imdbid: wLMovie.imdbid,\n            date: \"-\"\n        }\n    })\n    return result\n}\n","import React, { Component } from 'react';\nimport * as keys from '../.env.json';\nimport movieData from '../movieData.json'\nimport './styling/UserWatchList.css'\nimport { connect } from 'react-redux'\nimport findExpired from './utils/findExpired'\n\nclass FindAndAdd extends Component {\n    constructor() {\n        super()\n        this.state = {\n            title: '',\n            returnedMovies: [],\n            loading: false,\n            userid: localStorage.getItem('userid')\n        }\n    }\n\n    handleFindMovie = () => {\n        let title = this.state.title\n        let OMDB_KEY = process.env.REACT_APP_OMDB_KEY\n        let moviesURL = \"https://cors-anywhere.herokuapp.com/http://www.omdbapi.com/?s=\" + title + \"&apikey=\" + OMDB_KEY\n\n        fetch(moviesURL)\n            .then(response => response.json())\n            .then(json => {\n              if(json.Response === \"False\") {\n                this.setState({\n                  loading: true,\n                })\n              } else {\n                this.setState({\n                    returnedMovies: json.Search,\n                    loading: false\n                })}\n            }).then(() => {\n                console.log(this.state.returnedMovies)\n            })\n    }\n\n\n    handleTextBoxChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleAddToWatchList = (e) => {\n        fetch('https://lastcall-server.herokuapp.com/add-movie', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title: e.target.name,\n                imdbID: e.target.id,\n                userid: this.state.userid\n            })\n        }).then((response) => response.json())\n            .then(json => {\n                if (json.status === 500) {\n                    alert(json.message)\n                } else {\n                    this.props.onUpdate(json)\n                }\n            })\n\n    }\n\n    render() {\n        let omdbList = this.state.returnedMovies\n        let movieItems = (<h3>Search Returned 0 Matches</h3>)\n        if (!this.state.loading) {\n            movieItems = omdbList.map((movie) => {\n                return (\n                    <li key={movie.imdbID}>\n                        <img className=\"omdb-poster\" alt={movie.Poster} src={movie.Poster}></img>\n                        <p>{movie.Title}</p>\n                        <button onClick={this.handleAddToWatchList} name={movie.Title} id={movie.imdbID}>Add to Watch List</button>\n                    </li>\n                )\n            })\n        }\n        return (\n            <div className=\"omdbDiv\">\n                <h2>Add a Movie</h2>\n                <div>\n                    <input type=\"text\" onChange={this.handleTextBoxChange} name=\"title\" placeholder=\"Movie Title\"></input>\n                    <button onClick={this.handleFindMovie}>Find Movie</button>\n                </div>\n                <ul className=\"ombd-li\">{movieItems}</ul>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onUpdate: (json) => dispatch({\n            type: 'UPDATE',\n            value: json\n        })\n    }\n}\nexport default connect(null, mapDispatchToProps)(FindAndAdd)\n","import React, { Component } from 'react';\nimport './styling/UserWatchList.css'\nimport WatchList from './WatchList.js';\nimport FindAndAdd from './FindAndAdd.js';\n\nexport class UserWatchList extends Component {\n\n\n    render() {\n        return (\n            <div className=\"userWatchListBody\">\n                <div className=\"lists-container\">\n                    <div className=\"watchlist\">\n                        <WatchList />\n                    </div>\n                    <div className=\"omdb-list\">\n                        <FindAndAdd />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './styling/movieList.css'\nimport replaceASCII from './utils/replaceASCII'\nimport movieData from '../movieData.json'\n\n\nexport class NewMovies extends Component {\n    constructor(props) {\n        let url = \"https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/new-releases\"\n        fetch(url)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({\n                    ...this.state.movies,\n                    movies: json\n                })\n                localStorage.setItem('newMovies', JSON.stringify(json))\n                console.log(json)\n            })\n\n        super(props)\n        this.state = {\n            movies: '',\n            loading: true\n        }\n\n    }\n    componentDidMount() {\n        let url = \"https://cors-anywhere.herokuapp.com/https://lastcall-server.herokuapp.com/new-releases\"\n        fetch(url)\n            .then(response => response.json())\n            .then(json => {\n\n                this.setState({\n                    ...this.state.movies,\n                    loading: false,\n                    movies: json\n                })\n                localStorage.setItem('newMovies', JSON.stringify(json))\n            })\n    }\n    render() {\n        let movies = []\n        let movieItem = (<p>Loading</p>)\n        if (!this.state.loading) {\n            movies = JSON.parse(localStorage.getItem('newMovies')).ITEMS\n            console.log(movies)\n            movieItem = movies.map((movie) => {\n                let str = replaceASCII(movie.title)\n                return (\n                    <div className=\"listElementContainer\">\n                        <li className=\"listElement\" key={movie.imdbid}>\n                            <div>\n                                <img src={movie.image} alt={movie.image}></img>\n                                <p className=\"listElementMovieTitle\">{str}</p>\n                                {/* <p className=\"listElementMovieEndDate\">{movie.unogsdate}</p> */}\n                                <span className=\"listElementMovieCountdown\">Available</span>\n                            </div>\n                        </li>\n                    </div>\n\n                )\n\n            })\n        }\n\n        return (\n            <div className=\"listElementBody\">\n                <div className=\"listElementHeader\">\n                    <h1>New Arrivals</h1>\n                </div>\n                <ul className=\"movieItemList\">{movieItem}</ul>\n            </div>\n        )\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nwindow.addEventListener('fetch', function(event) {\n    console.log(event.request.url);\n    event.respondWith(\n        caches.match(event.request).then(function(response) {\n            return response || fetch(event.request);\n        })\n    );\n});\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  isAuthenticated: false,\n  username: '',\n  watchList: []\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"UPDATE\":\n      return {\n        ...state,\n        watchList: action.value\n      }\n    case 'ON_AUTH':\n      return {\n        ...state,\n        isAuthenticated: action.token != null ? true : false,\n        username: action.username\n      }\n    case 'LOGOUT':\n      return {\n        ...state,\n        isAuthenticated: false,\n        username: ''\n      }\n    default: return state\n  }\n}\nexport default reducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport BaseLayout from './components/BaseLayout.js';\nimport Login from './components/Login';\nimport { MovieList } from './components/userMovieList';\nimport { ExampleMovieList } from './components/exampleMovieList';\nimport { UserWatchList } from './components/UserWatchList';\nimport { NewMovies } from './components/NewMovies'\n\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './components/stores/reducers/reducer';\nimport { setAuthenticationHeader } from './components/utils/authentication';\n\nconst store = createStore(reducer)\n//, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\nsetAuthenticationHeader(localStorage.getItem('jsonwebtoken'))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <BaseLayout>\n        <Switch>\n          <Route path='/' exact component={App} />\n          <Route path='/userMovies' component={MovieList} />\n          <Route path='/exampleMovies' component={ExampleMovieList} />\n          <Route path='/newArrivals' component={NewMovies} />\n          <Route path='/user-watchList' component={UserWatchList} />\n          <Route path='/login-page' component={Login} />\n        </Switch>\n      </BaseLayout>\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}